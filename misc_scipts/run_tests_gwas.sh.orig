gwaspath=$1
export PYTHONPATH=$PYTHONPATH:$gwaspath/federated_dp_pca
echo $PYTHONPATH
conda activate federated-pca
datapath=$gwaspath/data/1000g/raw
resultpath=$gwaspath/results/1000g

# take 2 chromosomes, we don't want to spam
for e in {1..2} ;
do
python3 $gwaspath/federated_dp_pca/python/PCA/vertical/vertical_pca_benchmark.py -f \
$datapath/chr${e}/chr${e}.thin \
--filetype 'gwas' --center -o $resultpath/chr${e} -r 10 -k 10 \
 -i 500 --sep '\t' --header 0 --rownames 0 --names chr${e} --scale \
 --compare_pca $resultpath/chr${e}/plink/chr${e}.thin.eigenvec.values \
 --vert -s 2,5
done
echo "summaries"
for e in {1..2} :
do
cd $resultpath/chr${e}
<<<<<<< HEAD
bash $gwaspath/federated_dp_pca/misc_scipts/make_summaries.sh $gwaspath/federated_dp_pca
=======
echo $(pwd)
bash $gwaspath/federated_dp_pca/misc_scipts/make_summaries.sh \
$gwaspath/federated_dp_pca
outfile1='angles_precomp.tsv'
outfile2='angles_precomp.summary.tsv'
colname='angle'
Rscript $gwaspath/federated_dp_pca/R/vertical-pca-benchmark/data_cleanup/read_data.R -b . -s 'angles_precomp' -c $colname -o $outfile1 -d $gwaspath/federated_dp_pca
Rscript $gwaspath/federated_dp_pca/R/vertical-pca-benchmark/data_cleanup/aggregate_data.R -f $outfile1 -o $outfile2  -c $colname
mkdir -p summaries
cp wide.* summaries
done
>>>>>>> 7b1cbaa20c25020f0d1eef7fc78a5b2b8dcc5625
